version: "3"

services:
  postgres:
    container_name: postgres
    build:
      context: ./postgres
      dockerfile: Dockerfile
    ports:
      - "5432:5432"

  debezium:
    image: quay.io/debezium/connect:2.5
    container_name: debezium
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=5432
      - CONFIG_STORAGE_TOPIC=dbz_connect_configs
      - OFFSET_STORAGE_TOPIC=dbz_connect_offsets
      - STATUS_STORAGE_TOPIC=dbz_connect_statuses
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
      - CONNECT_PLUGIN_PATH=/kafka/connect
    depends_on:
      - postgres
      - kafka

  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Set message.max.bytes
      - KAFKA_MESSAGE_MAX_BYTES=1000000

  tabular_connector:
    restart: always
    container_name: tabular_connector
    build:
      context: ./tabular_connector
      dockerfile: Dockerfile
    depends_on:
      - kafka

  shadowtraffic_kafka:
    restart: always
    image: shadowtraffic/shadowtraffic:0.1.11
    container_name: shadowtraffic_kafka
    env_file:
      - ./shadowtraffic/license.env
    volumes:
      - ./shadowtraffic/kafka-config.json:/home/config.json
    command: ["--config", "/home/config.json"]
    depends_on: 
      - kafka

  shadowtraffic_pg:
    restart: always
    image: shadowtraffic/shadowtraffic:0.1.11
    container_name: shadowtraffic_pg
    env_file:
      - ./shadowtraffic/license.env
    volumes:
      - ./shadowtraffic/pg-config.json:/home/config.json
    command: ["--config", "/home/config.json"]
    depends_on: 
      - postgres
